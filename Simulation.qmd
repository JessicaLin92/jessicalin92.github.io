---
title: "Project 3: Simulation"
output:
  html_document:
    message: FALSE
    warning: FALSE
---

For this project, we aimed to construct a simulation of students doing course registration at the Claremont Colleges to obtain a quantitative information on the probability of getting into the class the student wanted.

In order to create this simulation, We first defined a function that simulate the registration action, which take the class size and the number of students that is planning to take the class. next we random shuffle students into a list that represent the order of course registration time. Last, we define the result for whether one particular student can get into the class such True: the student can get into the class, or False: the student would not get into the class.

```{r}
library(purrr)
simulate_registration <- function(class_size, num_students) {
  random <- sample(1:num_students)  # Randomly shuffle students
  
  registered_students <- random[1:class_size]  # Select the first 'class_size' students
  return(ifelse(1 %in% registered_students, TRUE, FALSE))  # if the student is registered
}
```

After we finish setting up and defining the function, now we run it with map to rerun and simulate the event. For our simulation, because of how small the class at the Claremont colleges normally are, let's put 20 as the class_size for this imaginary class. For the students number, although the total students number may be high, however, we should only consider the number of students that may be interested into taking this imaginary class, thus let's assume there are 50 students wanting to get into this class.

For number of simulations, I choose to run 1000 times because in probability simulations, running multiple trials reduces random variability and gives a more stable estimate of the true probability.

```{r}
class_size <- 20
num_students <- 50
num_simulations <- 1000

# Run simulations
results <- map_int(1:num_simulations, ~ simulate_registration(class_size = class_size, num_students = num_students))

# Calculate the probability that student can gets a spot
num_true <- sum(results == 1)
probability <- num_true / num_simulations

# Print the result
print(paste("Probability that student 1 gets a spot:", probability))
```

After a few trials of 1000 times simulations, the general probability value we are getting are between 0.38 \~ 0.42, which basically concluded that for this course registration simulation with 50 students trying to get in a 20 spot class, the probability of getting in is around 0.4.

```{r}
library(ggplot2)


results_df <- data.frame(
  Status = c("Not Registered", "Registered"),
  Proportion = c(1 - probability, probability)
)


ggplot(results_df, aes(x= 1, y = Proportion, fill = Status)) +
  geom_bar(stat = "identity") +
  labs(title = "Proportion of Student Getting a Spot in the Class",
       x = "",
       y = "Proportion") +
  theme_minimal()+
  scale_fill_manual(values = c("Registered" = "lightgreen", "Not Registered" = "gray"))
```

This plot display the results that we run, which is whether the student gets into the class. As the graph displays, the proportion of a student getting into the class is slight below 50% particularly around the 40% range. On the other hand, the proportion of student not getting into the class they want is around 60%.

# Conclusion

For this project, we use R to simulate the course registration event here at 5C colleges, although the numbers we input are very much based on assumptions, we do successfully use R to simulate and get a sense of the probabilities of 1 student getting into the class that 50 students are interested in.

Some possible limitation or improvement for future simulation:

-   Could potentially take the concept of 'majors' into consideration as they tends to have a prioritizes when registering for their major classes.

-   Could take into consideration of the registration time being weighted towards upperclassman

-   In the similar manner, we can also take into consideration of 'perms' since this is the way professor approve or disapprove students' ability to register the class.
